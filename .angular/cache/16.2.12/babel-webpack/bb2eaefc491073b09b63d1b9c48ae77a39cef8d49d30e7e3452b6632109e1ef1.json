{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../chat-service.service\";\nimport * as i2 from \"@angular/common\";\nfunction ChatComponent_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 3)(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r1, \" \");\n  }\n}\nexport class ChatComponent {\n  constructor(ChatService) {\n    this.ChatService = ChatService;\n    this.messages = [];\n    this.comments = this.ChatService.comments;\n  }\n  // getMsg() {\n  //   this.response = this.ChatService.getMessage();\n  // }\n  sendMsg(msg) {\n    console.log('send message');\n    this.ChatService.sendMessage(msg);\n  }\n  // Subscribe to chat messages\n  ngOnInit() {\n    this.ChatService.getMessages().subscribe(message => {\n      this.messages.push(message);\n    });\n  }\n  static #_ = this.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"theForm\"], [\"id\", \"chat\"], [\"id\", \"messages\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"messages\"], [\"id\", \"input\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [1, \"submitBtn\", 3, \"click\"], [\"id\", \"chatName\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, ChatComponent_ul_2_Template, 3, 1, \"ul\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"ul\", 3);\n        i0.ɵɵelementStart(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.message = $event;\n        })(\"keyup\", function ChatComponent_Template_input_keyup_4_listener($event) {\n          return $event.keyCode == 13 && ctx.sendMessage();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_5_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(6, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"p\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.message);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"html[_ngcontent-%COMP%] { background-color: black; color: white; font-size: 1.5em; }\\nbody[_ngcontent-%COMP%] { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif; }\\n\\n#form[_ngcontent-%COMP%] { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; -webkit-backdrop-filter: blur(10px); backdrop-filter: blur(10px); }\\n#input[_ngcontent-%COMP%] { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }\\n#input[_ngcontent-%COMP%]:focus { outline: none; }\\n#form[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }\\n\\n#messages[_ngcontent-%COMP%] { list-style-type: none; margin: 0; padding: 0; }\\n#messages[_ngcontent-%COMP%]    > li[_ngcontent-%COMP%] { background: #767373; padding: 0.5rem 1rem; }\\n#messages[_ngcontent-%COMP%]    > li[_ngcontent-%COMP%]:nth-child(odd) { background: #686464; }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyx1QkFBdUIsRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUU7QUFDaEUsT0FBTyxTQUFTLEVBQUUsb0JBQW9CLEVBQUUsZ0dBQWdHLEVBQUU7O0FBRTFJLFFBQVEsK0JBQStCLEVBQUUsZ0JBQWdCLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsc0JBQXNCLEVBQUUsbUNBQTJCLEVBQTNCLDJCQUEyQixFQUFFO0FBQzVMLFNBQVMsWUFBWSxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsbUJBQW1CLEVBQUUsZUFBZSxFQUFFO0FBQzVGLGVBQWUsYUFBYSxFQUFFO0FBQzlCLGlCQUFpQixnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFOztBQUVuSSxZQUFZLHFCQUFxQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUU7QUFDMUQsaUJBQWlCLG1CQUFtQixFQUFFLG9CQUFvQixFQUFFO0FBQzVELGdDQUFnQyxtQkFBbUIsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImh0bWwgeyBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsgY29sb3I6IHdoaXRlOyBmb250LXNpemU6IDEuNWVtOyB9XG5ib2R5IHsgbWFyZ2luOiAwOyBwYWRkaW5nLWJvdHRvbTogM3JlbTsgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7IH1cblxuI2Zvcm0geyBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMTUpOyBwYWRkaW5nOiAwLjI1cmVtOyBwb3NpdGlvbjogZml4ZWQ7IGJvdHRvbTogMDsgbGVmdDogMDsgcmlnaHQ6IDA7IGRpc3BsYXk6IGZsZXg7IGhlaWdodDogM3JlbTsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpOyB9XG4jaW5wdXQgeyBib3JkZXI6IG5vbmU7IHBhZGRpbmc6IDAgMXJlbTsgZmxleC1ncm93OiAxOyBib3JkZXItcmFkaXVzOiAycmVtOyBtYXJnaW46IDAuMjVyZW07IH1cbiNpbnB1dDpmb2N1cyB7IG91dGxpbmU6IG5vbmU7IH1cbiNmb3JtID4gYnV0dG9uIHsgYmFja2dyb3VuZDogIzMzMzsgYm9yZGVyOiBub25lOyBwYWRkaW5nOiAwIDFyZW07IG1hcmdpbjogMC4yNXJlbTsgYm9yZGVyLXJhZGl1czogM3B4OyBvdXRsaW5lOiBub25lOyBjb2xvcjogI2ZmZjsgfVxuXG4jbWVzc2FnZXMgeyBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgfVxuI21lc3NhZ2VzID4gbGkgeyBiYWNrZ3JvdW5kOiAjNzY3MzczOyBwYWRkaW5nOiAwLjVyZW0gMXJlbTsgfVxuI21lc3NhZ2VzID4gbGk6bnRoLWNoaWxkKG9kZCkgeyBiYWNrZ3JvdW5kOiAjNjg2NDY0OyB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","message_r1","ChatComponent","constructor","ChatService","messages","comments","sendMsg","msg","console","log","sendMessage","ngOnInit","getMessages","subscribe","message","push","_","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","ChatComponent_Template","rf","ctx","ɵɵtemplate","ChatComponent_ul_2_Template","ɵɵelement","ɵɵlistener","ChatComponent_Template_input_ngModelChange_4_listener","$event","ChatComponent_Template_input_keyup_4_listener","keyCode","ChatComponent_Template_button_click_5_listener","ɵɵproperty"],"sources":["/mnt/c/Users/ylva/dbwebbkurser/jsramverk/2023version/yso/appBTHv2/frontendBTH/src/app/chat/chat.component.ts","/mnt/c/Users/ylva/dbwebbkurser/jsramverk/2023version/yso/appBTHv2/frontendBTH/src/app/chat/chat.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\n\nimport { ChatService } from '../chat-service.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\nexport class ChatComponent {\n  constructor( \n    private ChatService: ChatService) { \n    }\n\n    message: string;\n    messages: string[] = [];\n    response: void;\n\n    comments = this.ChatService.comments;\n\n    // getMsg() {\n    //   this.response = this.ChatService.getMessage();\n    // }\n  \n\n    sendMsg(msg: string) {\n      console.log('send message');\n      this.ChatService.sendMessage(msg);\n    }\n\n    // Subscribe to chat messages\n    ngOnInit() {\n      this.ChatService\n        .getMessages()\n        .subscribe((message: string) => {\n          this.messages.push(message);\n        });\n    }\n\n}\n","<div class=\"theForm\">  \n    \n\n        <div id=\"chat\">\n            <ul id=\"messages\" *ngFor=\"let message of messages\">\n                <li> {{message}} </li>\n            </ul>\n        </div>\n\n        <ul id=\"messages\"></ul>\n            <input id=\"input\" [(ngModel)]=\"message\" (keyup)=\"$event.keyCode == 13 && sendMessage()\" />\n            <button (click)=\"sendMessage()\" class=\"submitBtn\">Send</button>\n        <p id=\"chatName\"></p>\n\n\n</div>"],"mappings":";;;;;ICIYA,EAAA,CAAAC,cAAA,YAAmD;IAC1CD,EAAA,CAAAE,MAAA,GAAY;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAjBH,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAAK,kBAAA,MAAAC,UAAA,MAAY;;;ADKjC,OAAM,MAAOC,aAAa;EACxBC,YACUC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAInB,KAAAC,QAAQ,GAAa,EAAE;IAGvB,KAAAC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACE,QAAQ;EANpC;EAQA;EACA;EACA;EAGAC,OAAOA,CAACC,GAAW;IACjBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,IAAI,CAACN,WAAW,CAACO,WAAW,CAACH,GAAG,CAAC;EACnC;EAEA;EACAI,QAAQA,CAAA;IACN,IAAI,CAACR,WAAW,CACbS,WAAW,EAAE,CACbC,SAAS,CAAEC,OAAe,IAAI;MAC7B,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC,CAAC;EACN;EAAC,QAAAE,CAAA,G;qBA5BQf,aAAa,EAAAP,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAf,WAAA;EAAA;EAAA,QAAAgB,EAAA,G;UAAblB,aAAa;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1BhC,EAAA,CAAAC,cAAA,aAAqB;QAITD,EAAA,CAAAkC,UAAA,IAAAC,2BAAA,gBAEK;QACTnC,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAoC,SAAA,YAAuB;QACnBpC,EAAA,CAAAC,cAAA,eAA0F;QAAxED,EAAA,CAAAqC,UAAA,2BAAAC,sDAAAC,MAAA;UAAA,OAAAN,GAAA,CAAAb,OAAA,GAAAmB,MAAA;QAAA,EAAqB,mBAAAC,8CAAAD,MAAA;UAAA,OAAAA,MAAA,CAAAE,OAAA,IAA4B,EAAE,IAAIR,GAAA,CAAAjB,WAAA,EAAa;QAAA,EAA/C;QAAvChB,EAAA,CAAAG,YAAA,EAA0F;QAC1FH,EAAA,CAAAC,cAAA,gBAAkD;QAA1CD,EAAA,CAAAqC,UAAA,mBAAAK,+CAAA;UAAA,OAAST,GAAA,CAAAjB,WAAA,EAAa;QAAA,EAAC;QAAmBhB,EAAA,CAAAE,MAAA,WAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACnEH,EAAA,CAAAoC,SAAA,WAAqB;QAG7BpC,EAAA,CAAAG,YAAA,EAAM;;;QAX4CH,EAAA,CAAAI,SAAA,GAAW;QAAXJ,EAAA,CAAA2C,UAAA,YAAAV,GAAA,CAAAvB,QAAA,CAAW;QAM/BV,EAAA,CAAAI,SAAA,GAAqB;QAArBJ,EAAA,CAAA2C,UAAA,YAAAV,GAAA,CAAAb,OAAA,CAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}